{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["FeedbackOption","options","onIncrement","map","option","className","type","name","onClick","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","defaultProps","Section","title","children","App","state","incrementValue","value","setState","prevState","this","Math","round","totalFeedback","countPositiveFeedbackPercentage","keys","Object","Component","ReactDom","render","StrictMode","document","getElementById"],"mappings":"yRAyBeA,EApBQ,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC/B,OAAQ,8BACHD,EAAQE,KAAI,SAACC,GAAD,OACT,wBACIC,UAAU,SACVC,KAAK,SACLC,KAAMH,EACNI,QAAS,kBAAMN,EAAYE,IAJ/B,SAKKA,UCWFK,EApBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC7C,OACI,gCACI,4CACA,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,oDAAuBC,EAAvB,YCRNC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,KAGZD,EAAaE,aAAe,CACxBD,QAAS,qBAEED,QCMAG,G,MAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,sBAAKf,UAAU,UAAf,UACI,6BAAKc,IACJC,OCDPC,E,4MAYFC,MAAQ,CACJZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTW,eAAiB,SAACC,GACd,EAAKC,UAAS,SAAAC,GACV,OAAO,eAAGF,EAAQE,EAAUF,GAAS,O,mDAQ7C,WACI,MAA+BG,KAAKL,MACpC,OADA,EAAQZ,KAAR,EAAcC,QAAd,EAAuBC,M,6CAI3B,WACI,IAAQF,EAASiB,KAAKL,MAAdZ,KACR,OAAOkB,KAAKC,MAAOnB,EAAOiB,KAAKG,gBAAmB,O,oBAItD,WACI,MAA+BH,KAAKL,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQc,KAAKG,gBACbhB,EAAmBa,KAAKI,kCACxBC,EAAOC,OAAOD,KAAKL,KAAKL,OAC9B,OACI,eAAC,EAAD,CAASH,MAAO,wBAAhB,UACI,cAAC,EAAD,CAAgBjB,YAAayB,KAAKJ,eAC9BtB,QAAS+B,IAGTnB,EACI,cAAC,EAAD,CACIH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,iBAAkBA,IAGlB,cAAC,EAAD,CACIE,QAAQ,6B,GA5DtBkB,aAAZb,EACKJ,aAAe,CAClBP,KAAM,EACNC,QAAS,EACTC,IAAK,GAkEES,QCzEfc,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.96addd93.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css'\r\n\r\n\r\nconst FeedbackOption = ({ options, onIncrement }) => {\r\n    return (<div>\r\n        {options.map((option) => (\r\n            <button\r\n                className=\"Button\"\r\n                type=\"button\"\r\n                name={option}\r\n                onClick={() => onIncrement(option)}>\r\n                {option}\r\n\r\n\r\n\r\n            </button>\r\n        ))}\r\n    </div>)\r\n}\r\nFeedbackOption.propTypes = {\r\n    options: PropTypes.object.isRequired,\r\n    onIncrement: PropTypes.func.isRequired\r\n};\r\nexport default FeedbackOption","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n    return (\r\n        <div>\r\n            <h2>Statistics</h2>\r\n            <p>Good:{good}</p>\r\n            <p>Neutral:{neutral}</p>\r\n            <p>Bad:{bad}</p>\r\n            <p>Total:{total}</p>\r\n            <p>Positive feedback: {positiveFeedback} %</p>\r\n        </div>\r\n\r\n    )\r\n}\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.func.isRequired,\r\n    positiveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default Statistics","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\nNotification.defaultProps = {\r\n    message: \"No feedback given\"\r\n};\r\nexport default Notification","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './Section.css'\r\n\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div className=\"Section\">\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\nexport default Section","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FeedbackOption from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics'\r\nimport Notification from './components/Notification'\r\nimport Section from './components/Section'\r\n\r\nclass App extends Component {\r\n    static defaultProps = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n    static propTypes = {\r\n        good: PropTypes.number,\r\n        neutral: PropTypes.number,\r\n        bad: PropTypes.number,\r\n\r\n    };\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n\r\n    }\r\n    incrementValue = (value) => {\r\n        this.setState(prevState => {\r\n            return { [value]: prevState[value] + 1 }\r\n        })\r\n    };\r\n\r\n    // addFeedback = (name) => () => {\r\n    //     this.setState({ [name]: this.state[name] + 1 })\r\n    // }\r\n\r\n    totalFeedback() {\r\n        const { good, neutral, bad } = this.state;\r\n        return good + neutral + bad\r\n\r\n    }\r\n    countPositiveFeedbackPercentage() {\r\n        const { good } = this.state;\r\n        return Math.round((good / this.totalFeedback()) * 100);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        const total = this.totalFeedback();\r\n        const positiveFeedback = this.countPositiveFeedbackPercentage();\r\n        const keys = Object.keys(this.state);\r\n        return (\r\n            <Section title={\"Please leave feedback\"}>\r\n                <FeedbackOption onIncrement={this.incrementValue}\r\n                    options={keys} />\r\n\r\n                {\r\n                    total ? (\r\n                        <Statistics\r\n                            good={good}\r\n                            neutral={neutral}\r\n                            bad={bad}\r\n                            total={total}\r\n                            positiveFeedback={positiveFeedback}\r\n                        />\r\n                    ) : (\r\n                            <Notification\r\n                                message=\"No feedback given\"\r\n                            />\r\n                        )\r\n                }\r\n            </Section>\r\n\r\n        )\r\n\r\n    }\r\n}\r\nexport default App\r\n\r\n","import 'modern-normalize/modern-normalize.css';\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDom.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}